{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mPAIaA,G,KAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAqB7C,OACQ,0BAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAGlBO,QAAQC,IAAI,kBAMJ,2BACIC,KAAK,OACLC,MAAOX,EACPY,SAvBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,OACvBH,QAAQC,IAAIT,S,uBCLPc,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1CT,QAAQC,IAAIc,GAbO,kBAcZA,GAdY,4CAAH,sDCFPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OADAT,QAAQC,IAAIkB,EAAOV,GAEf,yBAAKc,UAAU,0DACX,yBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,+BAAKA,KCDJO,EAAU,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAAa,ECHT,SAACA,GAAc,IAAD,EACdhB,mBAAS,CAC9BuB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KAC1BC,EAD0B,KAkBvC,OAZAC,qBAAW,WACPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEfH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAKtB,CAACpB,IAEGqB,EDbuBK,CAAa1B,GAA/Ba,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAGpB,OAFA3B,QAAQC,IAAI0B,GAGR,oCACA,gCAAOpB,GACFoB,GAAW,uBAAGJ,UAAU,oCAAb,WAChB,yBAAKA,UAAU,aAEHH,EAAOJ,KAAK,SAACC,GAAD,OACT,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACPD,UEhBlBkB,EAAe,WAAM,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEtB6C,EAFsB,KAEX9C,EAFW,KAW7B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ8C,EAAWpB,KAAM,SAACT,GAAD,OAEb,kBAAC,EAAD,CAAS2B,IAAM3B,EAAUA,SAAUA,UCnB3D8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3c8f731a.chunk.js","sourcesContent":["import React,{useState} from \"react\";\nimport PropType from \"prop-types\";\n\n\nexport const AddCategory =  ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n        console.log(inputValue);\n    }\n\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue,...cats]);\n            setInputValue('');\n        }\n\n        console.log('Submit Hecho');\n\n    }\n\n    return (\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={ handleInputChange }\n                />\n            </form>\n    )\n\n    AddCategory.prototype = {\n        setCategories: PropType.func.isRequired\n    }\n\n}","\n\n\n\nexport const getGifs = async (category) => {\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=eZgLnS8y1y5B7xSotiQZ0lASCy5c9Qxe`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    console.log(gifs);\n    return gifs;\n}","import React,{useState,useEffect} from \"react\";\n\nexport const GifGridItem = ({ title, url}) => {\n    console.log(title, url);\n    return (\n        <div className=\"card animate__animated animate__rotateIn animate__slow\">\n            <img src={ url} alt={title}></img>\n            <p> {title}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\nimport {GifGridItem} from \"./GifGridItem\";\n//import {getGifs} from \"../helpers/getGifs\";\n\n\nexport const GifGrid = ({category}) =>{\n\n    const {data:images, loading}= useFetchGifs(category);\n    console.log(loading)\n\n    return (\n        <>\n        <h3> { category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n        <div className=\"card-grid\">\n                {\n                    images.map( (img) =>(\n                       <GifGridItem\n                           key = {img.id}\n                           {...img}/>\n                    ))\n                }\n\n        </div>\n        </>\n    )\n\n}\n","import {useEffect, useState} from 'react'\nimport {getGifs} from \"../helpers/getGifs\";\n\nexport  const useFetchGifs = (category) => {\n    const [state,setState] = useState({\n        data :[],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(category).then(imgs => {\n\n                setState({\n                    data:imgs,\n                    loading: false\n                })\n\n\n        })\n    }, [category]) //evaluar la category\n\n    return state;\n\n\n}","import React,{useState} from \"react\";\nimport {AddCategory} from \"./components/AddCategory\";\nimport {GifGrid} from \"./components/GifGrid\";\n\nexport const GifExpertApp = ()=> {\n\n    const [categories,setCategories] = useState(['One Punch' ]);\n    /*const handleAdd = () => {\n        // inmutable categories.push('Gon');\n        // MALO setCategories('GON')\n        //setCategories( ['GON',...categories])\n        setCategories( catg => [ ...catg, 'HunterxHunter'])\n    }*/\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map(  (category) => (\n                        //<li key={category}>{category}<Ã¥/li>\n                        <GifGrid key= {category} category={category} />\n                        )\n                    )\n                }\n            </ol>\n        </>\n        )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}